{
  "hash": "e323990a8429fbe2ee5fbef48ddf8c28",
  "result": {
    "markdown": "---\naliases:\n  - /torsion/dihedral/oss/opensource/rdkit/xtb/energy/2021/02/16/torsion-angle-scans-xtb\nauthor: Peter Schmidtke\nbadges: true\nbranch: master\ncategories:\n  - torsion\n  - dihedral\n  - oss\n  - opensource\n  - rdkit\n  - xtb\n  - energy\ndate: '2021-02-16'\ndescription: Log of the hassle doing torsion angle scans with rdkit & xtb - ultimately comparing results to the crystallography open database\nimage: xtb_torsion_scan.png\noutput-file: 2021-02-16-torsion-angle-scans-xtb.html\ntitle: Torsion angle scan with rdkit & xtb\ntoc: true\nexecute:\n  keep-ipynb: false\n  freeze: auto\n---\n\nPost #4 will be along the lines of dihedral / torsion angle analysis again. The aim is to log some of the hurdles I had to overcome to run a torsion angle analysis with [xtb](https://github.com/grimme-lab/xtb) and / or [rdkit](https://www.rdkit.org/).\n\nWhat I'm trying to accomplish here is mainly to see how torsion angle scans can be performed - easily and robustly - using open source tools available. This is in preparation of a larger work track on analysing the data from the [COD](http://www.crystallography.net/cod/), where [first steps have already been set here](https://pschmidtke.github.io/blog/rdkit/crystallography/small%20molecule%20xray/xray/database/2021/01/25/cod-and-torsion-angles.html).\n\n\n## Aim\n\nGiven an input molecule and a particular torsion angle I'd like to see what the energy langscape of the molecule looks like when rotating around that torsion angle. I'd like to know how easy/complicated this is using two different tools: \n\n1. __rdkit__ with the integrated MMFF \n2. __xtb__ from the Grimme lab\n\nThe post is also inspired by an older [post done by iwatobipen](https://iwatobipen.wordpress.com/2020/09/06/visualize-the-torsion-drive-with-different-approach-openff-torchani-chemoinformatics-quantum_chemistry/) analyzing openforcefield with Ani2 on some torsion energy predictions using the [torsion drive dataset from the openforcefield initiative](https://qcarchivetutorials.readthedocs.io/en/latest/basic_examples/torsiondrive_datasets.html)\n\nAll code used for this post is available on [this separate repo](https://github.com/pschmidtke/dihedral_scans/tree/main/notebooks), as it uses a slightly different environment (you'll see why).\n\n## Dihedral scan with rdkit\n\nI don't really know why, but I started out with this molecule here: \n\n::: {.cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\"}\nfrom rdkit import Chem\nfrom rdkit.Chem import AllChem\nfrom rdkit.Chem import Draw\nmol=Chem.AddHs(Chem.MolFromSmiles('CCCOC1=CC=C(Cl)C(C)=C1'))\nfor i, a in enumerate(mol.GetAtoms()):\n        a.SetAtomMapNum(i)\nAllChem.EmbedMolecule(mol,randomSeed=10)    #generate an initial random conformation (randomSeed is fixed to have something reproducible)\n#mol\nDraw.MolToFile(mol,\"mol.png\",includeAtomNumbers=True,highlightAtoms=(1,2,3,4))        #sorry - rdkit 2019.03 issues with newer python versions (I guess)\n```\n:::\n\n\n![](mol.png)\n\nThe torsion angle I'm interested in is highlighted in red and situated between carbons 1,2,3 & 4. Now let's try to set up a torsion angle scan in rdkit using MMFF (UFF should be similar procedure ... )\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nfrom rdkit.Chem import rdMolTransforms\nimport copy\nimport pandas as pd\nfrom rdkit.Chem import rdForceFieldHelpers\nfrom rdkit.Chem import ChemicalForceFields\nfrom rdkit.Chem import rdMolTransforms\n\n\nconformer=mol.GetConformer(0)\n\nm2=copy.deepcopy(mol)\nmp2 = AllChem.MMFFGetMoleculeProperties(m2)\n\nenergy=[]\nconfid=0\nangles=range(-180,182,2)\n\nprint(\"Initial angle:\")\nprint(rdMolTransforms.GetDihedralDeg(conformer,1,2,3,4))\nfor angle in angles:\n    confid+=1\n    ff2 = AllChem.MMFFGetMoleculeForceField(m2, mp2)\n    ff2.MMFFAddTorsionConstraint(1,2,3,4, False, angle - .2, angle + .2, 1000.0)\n    ff2.Minimize()\n    energy.append(ff2.CalcEnergy())\n\n    xyz=ff2.Positions()\n    new_conf = Chem.Conformer(mol.GetNumAtoms())\n    for i in range(mol.GetNumAtoms()):\n        new_conf.SetAtomPosition(i, (m2.GetConformer(-1).GetAtomPosition(i)))\n    new_conf.SetId(confid)\n    mol.AddConformer(new_conf)\n\n\ndfrdkit = pd.DataFrame({'angle':angles, 'energy':energy})\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitial angle:\n179.99983170835984\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\n#! echo: false\nimport seaborn as sns\n\nsns.lineplot(\n    data=dfrdkit,\n    x=\"angle\", y=\"energy\",\n    markers=True, dashes=False\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n<Axes: xlabel='angle', ylabel='energy'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](2021-02-16-torsion-angle-scans-xtb_files/figure-html/cell-4-output-2.png){width=597 height=429}\n:::\n:::\n\n\n[](!energyplot.png)\n\nI'm printing the angle of the initial conformation here as well & start the scan from around that angle. Before I didn't and obviously it created a lot of issues with the minimization of the subsequent conformers. \nHere is the plot from iwatobipen's post on the same molecule & same torsion scan: \n\n![](https://iwatobipen.files.wordpress.com/2020/09/mol3.png?w=920)\n\n\n\nLet's first have a look at the minimized conformers. Here's a bit of code to browse through them. I collected all conformations generated with the torsion scan before. \n\n::: {.cell execution_count=4}\n``` {.python .cell-code code-fold=\"true\"}\npatt = Chem.MolFromSmarts('c1ccccc1');patt\nmatch = mol.GetSubstructMatch(patt)\n\nAllChem.AlignMolConformers(mol,atomIds=match)\n\nconformerIds=[conf.GetId() for conf in mol.GetConformers()]\nw = Chem.SDWriter(\"conformers.sdf\")\nfor cid in range(mol.GetNumConformers()):\n    w.write(mol, confId=cid)\nw.close()\n\nojs_define(conformerIds=list(conformerIds))\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"ojs-define\">{\"contents\": [{\"name\": \"conformerIds\", \"value\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181]}]}</script>\n```\n:::\n:::\n\n\n```{ojs}\n//| code-fold: true\n//| panel: input\n//| echo: false\n// Create input slider\nNGL=require(\"ngl@next\")\nviewof trajInput = Inputs.range([1, conformerIds.length], {value: 1, step: 1, label: \"Conformer ID\"});\nmd`Conformer ID: ${conformerIds[trajInput - 1]}`\n```\n\n```{ojs}\n//| code-fold: true\n//| echo: false\n// Create drawing area\ndivNGLConf = html`<div style=\"width:500px;height:400px;position:relative\"></div>`;\n```\n\n```{ojs}\n//| code-fold: true\n//| output: false\n//| echo: false\n\n// Create trajectory object\n\ntrajPDB = {\n  let stage = new NGL.Stage(divNGLConf, {clipDist: 0.0, backgroundColor: \"black\"});\n  let pdbString = await FileAttachment(\"conformers.sdf\").blob();\n  let structure = await stage.loadFile(pdbString, {ext: \"sdf\", asTrajectory: true})\n  let traj = structure.addTrajectory().trajectory\n  structure.addRepresentation(\"licorice\");\n  structure.autoView();\n  return traj;\n};\n\n// Create function to update trajectory\nupdate_traj = function(traj, id){\n  traj.setFrame(id)\n};\n\n// Update trajectory based on slider\nupdate_traj(trajPDB, trajInput - 1);\n```\n\n\n\n\nYou can use the slider above to browse through the first conformers. They look fairly reasonable to me so far. \n\nEven though we can observe a peak around 0° that is common between what I have here & iwatobipens post. The wells around -75° and 75° are not that easily distinguishible unfortunately.\n\n## Dihedral scan with xtb\n\nXTB is a toolkit implementing semiempirical quantum mechanics and you can do quite a lot of things. Among these: energy optimization, dihedral scans, constrained optimizations, metadynamics etc...It's conda packaged, so easy to deploy anywhere. \nIn contrary to things like Gaussian, Jaguar etc, it's:\n\n1. free\n2. opensource\n3. actually quite fast\n\nRunning an energy optimization with xtb is rather straightforward and would work like this: \n\n`xtb mol.sdf --opt --charge 0`\n\nThis will write the optimized molecule in an SD file, together with the energy (in hartree). \n\nXTB also supports dihedral scans as described in the documentation and the [examples work well on ethane](https://xtb-docs.readthedocs.io/en/latest/scan.html#ethane). The thing is, as usual ... we are not working with ethane or 1-Bromo-2-chloroethane (the other example). \n\nLong story short, I tried to integrate a dihedral scan as described in the documentation, but on my molecule above (which still remains rather simple)\n\nThis resulted in a ton of segmentation faults (fond memories of Gaussian came back to me) after a few dihedral scan cycles. My suspicion is that the xtb optimizer is not robust enough to allow to resolve really ugly clashes generated during the scan (I'm just guessing here).\n\nSo here's the workaround I came up with: preparing \"good enough\" starting conformations with rdkit and constrained optimizing with xtb and last, gathering the final energy values.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code code-fold=\"true\"}\nimport os\n# angles=range(-180,180,5)\nxtbenergy=[]\nw = Chem.SDWriter('mol.sdf')\nw.write(mol,confId=1)\nw.close()\n#loop over the previous conformations we obtained with rdkit\nfor idx,deg in enumerate(angles):\n#   Chem.MolToMolFile(mol,'molecule.mol')\n  atoms = '2,3,4,5' #set atoms to define the dihedral - NB: xtb indexes start at 1, rdkit at 0\n  # Now write the xtb input file:\n  fh = open(\"dihedral_constraint.inp\",\"w\")\n  fh.write(\"\"\"$constrain\n    force constant=1.0\n    dihedral: {},{}\n  $end\"\"\".format(atoms,float(deg)))\n  fh.close()\n  # run xtb\n  if idx==1: \n    inputfilename=\"mol.sdf\"\n  else:\n    inputfilename=\"xtbopt.sdf\"\n  os.popen(\"obabel -isdf \"+inputfilename+\" -osdf -Oobabelmol.sdf && export OMP_STACKSIZE=48G && export OMP_NUM_THREADS=12 && xtb obabelmol.sdf --opt vtight --charge 0 --input dihedral_constraint.inp\").read()\n  with open('xtbopt.sdf') as f:\n    first_line = f.readline()\n    xtbenergy.append(float(first_line.split(\"gnorm\")[0].split(\":\")[1]))\n\nprint(xtbenergy)\nprint(angles)\nprint(dfrdkit[\"energy\"])\n\nsns.lineplot(\n    data=dfrdkit,\n    x=\"angle\", y=\"energy\",\n    markers=True, dashes=False\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[-36.667513607102, -36.667309140177, -36.667281342484, -36.667239620489, -36.667184526773, -36.667117066126, -36.667037048311, -36.666945068211, -36.666842035773, -36.666727935772, -36.666604060224, -36.666472299839, -36.666331713852, -36.666184708292, -36.666031740213, -36.665874503518, -36.665713626478, -36.665550482059, -36.66538825599, -36.665225539683, -36.665065448331, -36.664908207787, -36.664756200554, -36.664609973167, -36.664471049714, -36.664340711715, -36.664220117532, -36.664110543681, -36.664013292087, -36.663929734669, -36.663861827436, -36.663811930617, -36.663785358953, -36.663798737338, -36.664979277748, -36.66520794, -36.665435059634, -36.665662744478, -36.665885124937, -36.666103090883, -36.66631293046, -36.666513718719, -36.666703584448, -36.666881133011, -36.66704466986, -36.667193605558, -36.667326090946, -36.667441655993, -36.667539140451, -36.667617824736, -36.667676838596, -36.667715513415, -36.667733191444, -36.667729259909, -36.667703174391, -36.667654498956, -36.667582681905, -36.667487621575, -36.667369122472, -36.667227133502, -36.667061760273, -36.666873378488, -36.666662375664, -36.666429356721, -36.666175209343, -36.665900780799, -36.665607020687, -36.665295092731, -36.664966346322, -36.664622108195, -36.664264015668, -36.663893894368, -36.663513617705, -36.663125457688, -36.662731505843, -36.662334108898, -36.661935609452, -36.661538373839, -36.661144767473, -36.660757102954, -36.660377606895, -36.660008348515, -36.659651419864, -36.659308746758, -36.658982148344, -36.65867330741, -36.658383810707, -36.658115108876, -36.657868511125, -36.657644953523, -36.657446596701, -36.657273573907, -36.65712674186, -36.657007487457, -36.656916139656, -36.656853449108, -36.656820030572, -36.65681652035, -36.656843563867, -36.656901487252, -36.656991065908, -36.657113141754, -36.657268773622, -36.657460253667, -36.657691643264, -36.657995009871, -36.658377284791, -36.658734779587, -36.659101032723, -36.65947082494, -36.65983907601, -36.660205762865, -36.660568445789, -36.660925547559, -36.661276290406, -36.661622045455, -36.661961151255, -36.662293542142, -36.662618617756, -36.662935539654, -36.663243196539, -36.663539682536, -36.663825629787, -36.664097088781, -36.66435469442, -36.664595178208, -36.664818301433, -36.66502278909, -36.665207515844, -36.66537160691, -36.665514564786, -36.665636254032, -36.665736540925, -36.66581574069, -36.665874412542, -36.665913153582, -36.665933064251, -36.665933964303, -36.665917822483, -36.665884812253, -36.665836013797, -36.665772163003, -36.665693615985, -36.665604836221, -36.665503223322, -36.665391578063, -36.665270323778, -36.665142434253, -36.665007952167, -36.664869075563, -36.664728209023, -36.664586960773, -36.664449514058, -36.664316973593, -36.664201080863, -36.664966618261, -36.665079218636, -36.665198049586, -36.665324534034, -36.665457378424, -36.665594877696, -36.665735947942, -36.665879336208, -36.666023480717, -36.666167690138, -36.666309918055, -36.666449518595, -36.666584866403, -36.666714785838, -36.666838170524, -36.666953893713, -36.667061007153, -36.667158583164, -36.667245753906, -36.667321770371, -36.667385989984, -36.667437794223, -36.667476728724, -36.667502584037, -36.667514883009, -36.667513577254]\nrange(-180, 182, 2)\n0      19.936138\n1      19.942480\n2      19.958324\n3      19.989942\n4      20.018098\n         ...    \n176    19.900734\n177    19.870128\n178    19.849113\n179    19.837853\n180    19.835944\nName: energy, Length: 181, dtype: float64\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n<Axes: xlabel='angle', ylabel='energy'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](2021-02-16-torsion-angle-scans-xtb_files/figure-html/cell-6-output-3.png){width=597 height=429}\n:::\n:::\n\n\nThis runs for a while, but it's still reasonably fast. Also, you might have noticed that I specified an argument to the `--opt` flag. This argument allows you to tweak how loose or precise the optimisation should be. More information on that can be found in the [xtb documentation here](https://xtb-docs.readthedocs.io/en/latest/optimization.html). In this example I specified a rather precise method. Feel free to play around with them and check the outcome (rather interesting as well). \n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nimport numpy as np\n# angle=np.array(range(180,-180,-1))\n\ndfxtb = pd.DataFrame({'angle':angles, 'xtb':xtbenergy,'MMFF':dfrdkit[\"energy\"]})\n# dfxtb = pd.DataFrame({'angle':angles, 'xtb':xtbenergy})\n\nimport matplotlib.pyplot as plt\nsns.lineplot(x=\"angle\",y=\"xtb\",data=dfxtb, color=\"g\")\nax2 = plt.twinx()\nsns.lineplot(x=\"angle\",y=\"MMFF\",data=dfxtb, color=\"b\", ax=ax2)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n<Axes: xlabel='angle', ylabel='MMFF'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](2021-02-16-torsion-angle-scans-xtb_files/figure-html/cell-7-output-2.png){width=683 height=429}\n:::\n:::\n\n\nOn this plot we can see both results, from rdkit's MMFF implementation and xtb. Good news...at least they agree on the maximum around 0°. Other than that there are quite important discrepancies on the location of the global minimum and the importance & extent of the energy barriers between them. Interestingly, openFF and ani2 also predict 180° as a global minimum.\n\n## Comparing vs COD\n\nLet's double check these results now [with the initial work done on the COD](https://pschmidtke.github.io/blog/rdkit/crystallography/small%20molecule%20xray/xray/database/2021/01/25/cod-and-torsion-angles.html) (not yet cleaned and curated - so there will be some noise in here still). This is for sure not the only experimental data-source one should use, but I'll define it as my golden source of truth here within the scope of this post. \nFirst I'll try to identify the smarts patterns from the torsion library that match the dihedral under investigation here: \n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\npatterns=pd.read_table(\"list_torsion_patterns.txt\",header=None,usecols=[1])\nselectedPatterns=[]\nfor torsionSmarts in patterns[1]:\n    torsionQuery = Chem.MolFromSmarts(torsionSmarts)\n    matches = mol.GetSubstructMatches(torsionQuery)\n    if(len(matches)>0):\n        if (matches==((1,2,3,4),)):\n            selectedPatterns.append(torsionQuery)\n            print(\"selected: \",torsionSmarts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nselected:  [C:1][CX4H2:2]!@;-[OX2:3][c:4]\nselected:  [!#1:1][CX4H2:2]!@;-[OX2:3][c:4]\nselected:  [C:1][CX4H2:2]!@;-[OX2:3][!#1:4]\nselected:  [!#1:1][CX4H2:2]!@;-[OX2:3][!#1:4]\nselected:  [!#1:1][CX4:2]!@;-[OX2:3][!#1:4]\n```\n:::\n:::\n\n\nNow we have the selected patterns, let's run these through the prepared [COD molecules (a huge local sd file right now)](https://pschmidtke.github.io/blog/rdkit/crystallography/small%20molecule%20xray/xray/database/2021/01/25/cod-and-torsion-angles.html) and gather statistics on angles. NB: the smart patterns used here might be redundant and map the same molecules. So here I'm keeping track of which molecule was previously selected and don't include it in a subsequent calculation anymore:\n\n::: {.cell tags='[]' execution_count=8}\n\n::: {.cell-output .cell-output-stdout}\n```\n[C:1][C&X4&H2:2]!@&-[O&X2:3][c:4]\n[!#1:1][C&X4&H2:2]!@&-[O&X2:3][c:4]\n[C:1][C&X4&H2:2]!@&-[O&X2:3][!#1:4]\n[!#1:1][C&X4&H2:2]!@&-[O&X2:3][!#1:4]\n[!#1:1][C&X4:2]!@&-[O&X2:3][!#1:4]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n[21:00:06] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:00:06] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:07] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:10] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:12] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:19] \n\n****\nPost-condition Violation\nElement '6 H' not found\nViolation occurred on line 93 in file /Users/runner/miniforge3/conda-bld/rdkit_1678104751770/work/Code/GraphMol/PeriodicTable.h\nFailed Expression: anum > -1\n****\n\n[21:00:19] ERROR: Element '6 H' not found\n[21:00:19] ERROR: moving to the beginning of the next molecule\n[21:00:19] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:00:21] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:00:26] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:00:31] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:00:37] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:44] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:00:58] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:06] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:06] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:06] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:07] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:01:07] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:07] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:11] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:16] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:20] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:20] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:20] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:21] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:01:57] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:13] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:29] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:29] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:29] Conflicting single bond directions around double bond at index 5.\n[21:02:29]   BondStereo set to STEREONONE and single bond directions set to NONE.\n[21:02:31] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:46] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:02:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:48] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:51] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:02:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:01] \n\n****\nPost-condition Violation\nElement '6 H' not found\nViolation occurred on line 93 in file /Users/runner/miniforge3/conda-bld/rdkit_1678104751770/work/Code/GraphMol/PeriodicTable.h\nFailed Expression: anum > -1\n****\n\n[21:03:01] ERROR: Element '6 H' not found\n[21:03:01] ERROR: moving to the beginning of the next molecule\n[21:03:02] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:03:04] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:03:10] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:03:14] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:03:22] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:30] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:45] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:54] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:03:55] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:55] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:03:59] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:04:05] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:04:09] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:04:09] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:04:09] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:04:10] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:04:49] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:04] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:21] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:22] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:22] Conflicting single bond directions around double bond at index 5.\n[21:05:22]   BondStereo set to STEREONONE and single bond directions set to NONE.\n[21:05:23] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:29] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:39] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:05:40] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:41] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:44] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:05:55] \n\n****\nPost-condition Violation\nElement '6 H' not found\nViolation occurred on line 93 in file /Users/runner/miniforge3/conda-bld/rdkit_1678104751770/work/Code/GraphMol/PeriodicTable.h\nFailed Expression: anum > -1\n****\n\n[21:05:55] ERROR: Element '6 H' not found\n[21:05:55] ERROR: moving to the beginning of the next molecule\n[21:05:55] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:05:58] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:06:04] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:06:09] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:06:17] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:27] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:44] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:54] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:06:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:54] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:06:59] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:07:06] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:07:10] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:07:10] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:07:10] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:07:11] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:07:55] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:14] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:35] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:35] Conflicting single bond directions around double bond at index 5.\n[21:08:35]   BondStereo set to STEREONONE and single bond directions set to NONE.\n[21:08:37] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:43] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:56] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:08:57] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:08:58] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:09:02] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:09:05] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:09:14] \n\n****\nPost-condition Violation\nElement '6 H' not found\nViolation occurred on line 93 in file /Users/runner/miniforge3/conda-bld/rdkit_1678104751770/work/Code/GraphMol/PeriodicTable.h\nFailed Expression: anum > -1\n****\n\n[21:09:14] ERROR: Element '6 H' not found\n[21:09:14] ERROR: moving to the beginning of the next molecule\n[21:09:15] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:09:17] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:09:25] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:09:32] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:09:42] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:09:52] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:01] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:12] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:23] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:23] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:23] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:24] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:10:24] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:24] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:29] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:41] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:41] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:41] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:10:42] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:11:30] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:11:50] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:11] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:12] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:12] Conflicting single bond directions around double bond at index 5.\n[21:12:12]   BondStereo set to STEREONONE and single bond directions set to NONE.\n[21:12:14] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:21] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:33] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:12:34] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:36] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:40] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:43] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:12:54] \n\n****\nPost-condition Violation\nElement '6 H' not found\nViolation occurred on line 93 in file /Users/runner/miniforge3/conda-bld/rdkit_1678104751770/work/Code/GraphMol/PeriodicTable.h\nFailed Expression: anum > -1\n****\n\n[21:12:54] ERROR: Element '6 H' not found\n[21:12:54] ERROR: moving to the beginning of the next molecule\n[21:12:55] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:12:58] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:13:07] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:13:14] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:13:27] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:37] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:47] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:13:59] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:11] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:11] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:11] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:11] Warning: molecule is tagged as 3D, but all Z coords are zero\n[21:14:12] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:12] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:17] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:25] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:30] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:30] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:31] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:14:32] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:15:26] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:15:49] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:16:14] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:16:14] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:16:14] Conflicting single bond directions around double bond at index 5.\n[21:16:14]   BondStereo set to STEREONONE and single bond directions set to NONE.\n[21:16:17] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n[21:16:24] WARNING: could not find number of expected rings. Switching to an approximate ring finding algorithm.\n```\n:::\n:::\n\n\nThis runs again for quite some time...so patience is needed. Once this is done, you should see something like that:\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n#lets convert that to numbers we show in the line-plot together with the previous results\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nangles=range(-180,182,2)\nintervals=pd.interval_range(start=-180, end=180,periods=181)\nbinangles=pd.cut(angles, bins=intervals).value_counts()\n\ndfall = pd.DataFrame({'angle':angles, 'xtb':xtbenergy,'MMFF':dfrdkit[\"energy\"],'cod':np.array(binangles)})\n\nfig, ax = plt.subplots()\nsns.histplot(codangles)\nax.set(xlabel='Angle',ylabel= 'Count')\nax2 = ax.twinx()\nsns.lineplot(x=\"angle\",y=\"xtb\",data=dfall, color=\"g\")\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\n<Axes: xlabel='angle', ylabel='xtb'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](2021-02-16-torsion-angle-scans-xtb_files/figure-html/cell-10-output-2.png){width=696 height=429}\n:::\n:::\n\n\nSo here we have in blue the results from the COD, in green xtb. Good news is that the positions of the wells seem to be estimated rather well with xtb. MMFF seems slightly off for the preference on 280°. Analysing relative energy differences between local minima, xtb doesn't follow the trend observed using MMFF & results from the COD here. \n\n## Conclusion\n\nInitially I wanted to run this on a larger set of molecules, but as usual things turn out to be much less robust than anticipated. So more to come in an upcoming post, on other torsion angles - especially the challenging ones. \n\nThe encouraging aspect here is, that despite all difficulties, one could potentially use this on a larger set of molecules. The instability of xtb on the integrated dihedral scan should be investigated a bit further as well ... essentially to make sure that this is not only due to my totally \"noob\" use of the toolkit - which is very likely.\n\n",
    "supporting": [
      "2021-02-16-torsion-angle-scans-xtb_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}